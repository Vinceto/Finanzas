{% extends 'base.html.twig' %}

{% block title %}Transacciones{% endblock %}

{% block body %}
    <h1>Transacciones</h1>
    <div class="row mb-3">
        <div class="col-4">
            <label for="currencyFilter" class="form-label"><i class="bi bi-cash-coin"></i> Filtrar por Moneda:</label>
            <select id="currencyFilter" class="form-select">
                <option value="0" {% if not currency %}selected{% endif %}>Todas</option>
                <option value="CLP" {% if currency == 'CLP' %}selected{% endif %}>CLP</option>
                <option value="USD" {% if currency == 'USD' %}selected{% endif %}>USD</option>
            </select>
        </div>
        <div class="col-4">
            <label for="yearFilter" class="form-label"><i class="bi bi-calendar"></i> Filtrar por Año:</label>
            <select id="yearFilter" class="form-select" onchange="populateMonthFilter();">
                {% for yearData in all_years %}
                    <option value="{{ yearData.year }}" {% if year == yearData.year %}selected{% endif %}>{{ yearData.year }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="col-4">
            <label for="monthFilter" class="form-label"><i class="bi bi-calendar"></i> Filtrar por Mes:</label>
            <select id="monthFilter" class="form-select" >
                {% for monthData in all_months %}
                    {# {% set month = monthData.month %}
                    {% set monthName = monthData.monthName %} #}
                    <option value="{{ monthData.month }}" {% if month == monthData.month %}selected{% endif %}>{{ monthData.monthName }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="col-12 text-end">
            <label class="invisible">Buscar</label>
            <button class="btn btn-primary" onclick="applyFilters()">Buscar</button>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                {# <th class="col">ID</th> #}
                <th class="col-3">Tipo</th>
                <th class="col-3">Monto</th>
                <th class="col-3">Fecha</th>
                <th class="col-3 text-end">Acciones</th>
            </tr>
        </thead>
        <tbody>
            {% for transaction in transactions %}
                <tr>
                    {# <td class="col-3">{{ transaction.id }}</td> #}
                    <td class="col-3">{{ transaction.type }}</td>
                    <td class="col-3">{{ transaction.amount }} ({{ transaction.currency }})</td>
                    <td class="col-3">{{ transaction.date|date('d-m-Y') }}</td>
                    <td class="col-3 text-end">
                        <a href="{{ path('transaction_edit', {'id': transaction.id}) }}" class="btn btn-primary"><i class="bi bi-pencil-fill"></i> Editar</a>
                        <a href="#" class="btn btn-danger ms-2 delete-transaction-button" data-transaction-id="{{ transaction.id }}" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"><i class="bi bi-trash-fill"></i> Eliminar</a>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {% if transactions.getTotalItemCount() > transactions.getItemNumberPerPage() %}
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                {% if transactions.getCurrentPageNumber() != 1 %}
                    <li class="page-item">
                        <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': 1})) }}">Primera</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': transactions.getCurrentPageNumber() - 1})) }}">Anterior</a>
                    </li>
                {% endif %}
                {% for page in range(1, transactions.getPaginationData().pageCount) %}
                    {% if page == transactions.getCurrentPageNumber() %}
                        <li class="page-item active"><span class="page-link">{{ page }}</span></li>
                    {% else %}
                        <li class="page-item"><a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': page})) }}">{{ page }}</a></li>
                    {% endif %}
                {% endfor %}
                {% if transactions.getCurrentPageNumber() != transactions.getPaginationData().pageCount %}
                    <li class="page-item">
                        <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': transactions.getCurrentPageNumber() + 1})) }}">Siguiente</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': transactions.getPaginationData().pageCount})) }}">Última</a>
                    </li>
                {% endif %}
            </ul>
        </nav>
    {% endif %}
    
    <div class="alert alert-info">
        <strong><i class="bi bi-wallet2"></i> Balance Total:</strong> {{ total_balance }}
    </div>
    
    <!-- Modal de confirmación -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar esta transacción?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="confirmDeleteButton" class="btn btn-danger">Eliminar</button>
            </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var confirmDeleteModal = document.getElementById('confirmDeleteModal');
            var confirmDeleteButton = document.getElementById('confirmDeleteButton');
            var transactionIdToDelete;

            document.querySelectorAll('.delete-transaction-button').forEach(function(button) {
                button.addEventListener('click', function() {
                    transactionIdToDelete = button.getAttribute('data-transaction-id');
                });
            });

            confirmDeleteButton.addEventListener('click', function() {
                if (!transactionIdToDelete) {
                    console.error('No se pudo obtener el ID de la transacción a eliminar.');
                    return;
                }

                var url = "{{ path('transaction_delete', {'id': 'PLACEHOLDER_ID'}) }}";
                url = url.replace('PLACEHOLDER_ID', transactionIdToDelete);

                var xhr = new XMLHttpRequest();
                xhr.open('DELETE', url, true);
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                xhr.onload = function() {
                    if (xhr.status === 200) {
                        location.reload(); // Recargar la página
                    } else {
                        console.error('Error al eliminar la transacción:', xhr.statusText);
                    }
                };
                xhr.send();
            });
        });

        // Función para poblar el filtro de meses
        function populateMonthFilter() {
            var year = document.getElementById('yearFilter').value;
            var monthFilter = document.getElementById('monthFilter');
                        
            // Clear existing options
            monthFilter.innerHTML = '';

            // Define los nombres de los meses en español
            var spanishMonths = ["Seleccione un Mes", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];

            // Determina el máximo mes basado en el año seleccionado
            var currentYear = new Date().getFullYear();
            var currentMonth = new Date().getMonth() + 1; // Sumamos 1 porque los meses se indexan desde 0

            var maxMonth = 12; // Por defecto, mostramos todos los meses (hasta diciembre)

            if (year == currentYear) {
                maxMonth = currentMonth; // Si es el año actual, mostramos solo hasta el mes actual
            }
                        
            // Populate months up to the maximum month
            for (var i = 0; i <= maxMonth; i++) {
                var option = document.createElement('option');
                option.text = spanishMonths[i];
                option.value = i === 0 ? '' : i;
                monthFilter.appendChild(option);
            }
        }

        function applyFilters() {
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '{{ path('transaction_index') }}';

            var currency = document.getElementById('currencyFilter').value;
            var year = document.getElementById('yearFilter').value;
            var month = document.getElementById('monthFilter').value;
            
            // Crear input para cada parámetro del filtro
            var inputCurrency = document.createElement('input');
            inputCurrency.type = 'hidden';
            inputCurrency.name = 'currency';
            inputCurrency.value = currency;

            var inputYear = document.createElement('input');
            inputYear.type = 'hidden';
            inputYear.name = 'year';
            inputYear.value = year;

            var inputMonth = document.createElement('input');
            inputMonth.type = 'hidden';
            inputMonth.name = 'month';
            inputMonth.value = month;

            // Agregar inputs al formulario
            form.appendChild(inputCurrency);
            form.appendChild(inputYear);
            form.appendChild(inputMonth);

            // Agregar formulario al body y enviarlo
            document.body.appendChild(form);
            form.submit();
        }
    </script>
{% endblock %}
